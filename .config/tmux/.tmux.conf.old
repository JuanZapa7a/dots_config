# The default prefix key ctrl+b (C-b in tmux) is not very easy to remember or even type on a keyboard. I prefer using ctrl+space (C-space).

unbind C-b
set -g prefix C-Space

# Keystroke to reload the config file easily
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Using the mouse is sometimes practical, especially since you might use it in other software, like your browser. 
set -g mouse on


# v and h are not binded by default, but we never know in the next versions...
unbind v
unbind h

unbind % # Split vertically
unbind '"' # Split horizontally

# The flag -c execute a shell command, and #{pane_current_path} simply bring you back where you were in the filesystem.
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# You can resize the panes with your mouse or by typing prefix key -> alt + arrow key.


# You can navigate the panes with your mouse or by typing prefix key -> arrow key. Or (without prefix key (-n)):
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# to have thousands of lines from the terminal outputs.
set -g history-limit 100000

# The keystroke prefix key -> w will create a new window, andprefix key -> n will allow you to rename the current window.

unbind n  #DEFAULT KEY: Move to next window
unbind w  #DEFAULT KEY: change current window interactively

bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

# windows and panes sgtart with number 1
set -g base-index 1
set-window-option -g pane-base-index 1

# You can navigate the windows (without prefix key (-n)) with alt-k and alt-j:
bind -n M-j previous-window
bind -n M-k next-window

# Copy mode prefix key -> [.You can come back to the default mode by hitting q.
set-window-option -g mode-keys vi

# select text with v and copy with y (like vim)
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

run-shell 'powerline-config tmux setup'
source "/home/juan/.local/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf"
set-option -g default-terminal "screen-256color"
